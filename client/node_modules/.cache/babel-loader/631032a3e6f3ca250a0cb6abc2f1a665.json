{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //updateCollections(collectionsMap);\n\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/andrei/Desktop/React.js proiecte/clothing-shop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,sBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CACVI,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD,CADgB,CAEhB;;AACAJ,IAAAA,QAAQ,CAACR,sBAAsB,CAACa,cAAD,CAAvB,CAAR;AACD,GANH,EAOGC,KAPH,CAOSC,KAAK,IAAIP,QAAQ,CAACP,uBAAuB,CAACc,KAAK,CAACC,OAAP,CAAxB,CAP1B;AAQD;AAED,OAAO,UAAUP,qBAAV,GAAkC;AACvC,QAAMZ,SAAS,CACbK,eAAe,CAACe,uBADH,EAEbd,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\nimport {\n  fetchCollectionSuccess,\n  fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n\n  collectionRef\n    .get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //updateCollections(collectionsMap);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    })\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}